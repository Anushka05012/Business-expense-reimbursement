{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agbha\\\\OneDrive\\\\Desktop\\\\business_expense\\\\client\\\\src\\\\components\\\\ResetPasswordForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { Container, Row, Col, Form, Button, Card, Alert } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPasswordForm() {\n  _s();\n  const {\n    resetToken\n  } = useParams();\n  const navigate = useNavigate();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage(\"\");\n    setError(\"\");\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const res = await axios.post(`http://localhost:5000/api/auth/reset-password/${resetToken}`, {\n        password\n      });\n      setMessage(res.data.message);\n      setTimeout(() => navigate(\"/\"), 3000); // Redirect to login after 3 seconds\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Failed to reset password.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"vh-100\",\n    style: {\n      background: \"#4d6cfb\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"h-100 align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        className: \"d-none d-md-block\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-white px-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"mb-3\",\n            children: \"Business Reimbursement portal \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Reset Your Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Enter a new password for your account.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"p-4 shadow\",\n          style: {\n            maxWidth: 400,\n            margin: \"auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formPassword\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"New Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"Enter new password\",\n                value: password,\n                onChange: e => setPassword(e.target.value),\n                required: true,\n                disabled: loading,\n                minLength: 6\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formConfirmPassword\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Confirm New Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"Confirm new password\",\n                value: confirmPassword,\n                onChange: e => setConfirmPassword(e.target.value),\n                required: true,\n                disabled: loading,\n                minLength: 6\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              disabled: loading,\n              className: \"w-100\",\n              children: loading ? \"Resetting...\" : \"Reset Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"success\",\n            className: \"mt-3\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            className: \"mt-3\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPasswordForm, \"jkjyyqqiQg1seseMnisE3JI2uWE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPasswordForm;\nexport default ResetPasswordForm;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordForm\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","Container","Row","Col","Form","Button","Card","Alert","axios","jsxDEV","_jsxDEV","ResetPasswordForm","_s","resetToken","navigate","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","error","setError","loading","setLoading","handleSubmit","e","preventDefault","res","post","data","setTimeout","err","_err$response","_err$response$data","response","fluid","className","style","background","children","md","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","margin","onSubmit","Group","controlId","Label","Control","type","placeholder","value","onChange","target","required","disabled","minLength","variant","_c","$RefreshReg$"],"sources":["C:/Users/agbha/OneDrive/Desktop/business_expense/client/src/components/ResetPasswordForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { Container, Row, Col, Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nfunction ResetPasswordForm() {\r\n  const { resetToken } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setMessage(\"\");\r\n    setError(\"\");\r\n\r\n    if (password !== confirmPassword) {\r\n      setError(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.post(`http://localhost:5000/api/auth/reset-password/${resetToken}`, { password });\r\n      setMessage(res.data.message);\r\n      setTimeout(() => navigate(\"/\"), 3000); // Redirect to login after 3 seconds\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || \"Failed to reset password.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"vh-100\" style={{ background: \"#4d6cfb\" }}>\r\n      <Row className=\"h-100 align-items-center\">\r\n        <Col md={6} className=\"d-none d-md-block\">\r\n          <div className=\"text-white px-5\">\r\n            <h1 className=\"mb-3\">Business Reimbursement portal </h1>\r\n            <h3>Reset Your Password</h3>\r\n            <p>Enter a new password for your account.</p>\r\n          </div>\r\n        </Col>\r\n        <Col md={6}>\r\n          <Card className=\"p-4 shadow\" style={{ maxWidth: 400, margin: \"auto\" }}>\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group className=\"mb-3\" controlId=\"formPassword\">\r\n                <Form.Label>New Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter new password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  required\r\n                  disabled={loading}\r\n                  minLength={6}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"formConfirmPassword\">\r\n                <Form.Label>Confirm New Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm new password\"\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  required\r\n                  disabled={loading}\r\n                  minLength={6}\r\n                />\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\" disabled={loading} className=\"w-100\">\r\n                {loading ? \"Resetting...\" : \"Reset Password\"}\r\n              </Button>\r\n            </Form>\r\n            {message && <Alert variant=\"success\" className=\"mt-3\">{message}</Alert>}\r\n            {error && <Alert variant=\"danger\" className=\"mt-3\">{error}</Alert>}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ResetPasswordForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}